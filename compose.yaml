version: '3.4'
x-app:
  name: kolibri-studio
  title: Kolibri Studio
  description: |
    Kolibri Studio is the tool used to organize learning resources and build channels for Kolibri, 
    an open-source platform specially designed to provide offline access to educational content.
  url: https://github.com/learningequality/studio
  category: education
  icon: icon.png
  author: Koen Swings  # Who created this compose file? (not the app ;-)
x-studio-environment:
  &studio-environment
    MPLBACKEND: ps
    SHELL: /bin/bash
    AWS_S3_ENDPOINT_URL: http://minio:9000
    DATA_DB_HOST: postgres
    DJANGO_SETTINGS_MODULE: contentcuration.dev_settings
    RUN_MODE: docker-compose
    CELERY_TIMEZONE: America/Los_Angeles
    CELERY_REDIS_DB: 0
    CELERY_BROKER_ENDPOINT: redis
    CELERY_RESULT_BACKEND_ENDPOINT: redis
    CELERY_REDIS_PASSWORD: ""
    PROBER_STUDIO_BASE_URL: http://studio-app:8080/{path}
x-studio-worker:
  &studio-worker
    image: koenswings/kolibri-studio
    restart: no
    #pull_policy: never
    depends_on:
      - minio
      - postgres
      - redis
    volumes:
      - .:/src
    environment: *studio-environment
services:
  studio-app:
    #<<: *studio-worker
    image: koenswings/kolibri-studio
    restart: no
    #pull_policy: never
    depends_on:
      - minio
      - postgres
      - redis
    environment: *studio-environment
    entrypoint: python docker/entrypoint.py
    command: yarn run devserver
    volumes:
        - ./data:/src
    ports:
      - "${port}:8080"
      - "4000:4000"
  
  #celery-worker:
  #  <<: *studio-worker
  #  command: make prodceleryworkers
  
  minio:
    image: minio/minio:RELEASE.2020-06-22T03-12-50Z
    restart: no
    #pull_policy: never
    entrypoint: minio server /data
    environment:
      MINIO_ACCESS_KEY: development
      MINIO_SECRET_KEY: development
      MINIO_API_CORS_ALLOW_ORIGIN: 'http://localhost:8080,http://127.0.0.1:8080'
    volumes:
      - .docker/minio:/data
  
  postgres:
    image: koenswings/kolibri-postgres
    restart: no
    #pull_policy: never
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: learningequality
      POSTGRES_PASSWORD: kolibri
      POSTGRES_DB: kolibri-studio
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
      - .docker/postgres:/docker-entrypoint-initdb.d
  
  redis:
    image: redis:6.0.9
    restart: no
    #pull_policy: never


volumes:
  minio_data:
  pgdata:
